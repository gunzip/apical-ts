openapi: 3.1.0
info:
  title: Test Discriminated Union API
  version: 1.0.0
  description: API for testing discriminated union generation
paths:
  /shapes:
    post:
      operationId: createShape
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shape"
      responses:
        201:
          description: Shape created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shape"

components:
  schemas:
    Shape:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: "#/components/schemas/Circle"
        - $ref: "#/components/schemas/Square"
        - $ref: "#/components/schemas/Triangle"

    Circle:
      type: object
      properties:
        type:
          type: string
          enum: ["circle"]
        radius:
          type: number
          minimum: 0
        color:
          type: string
      required:
        - type
        - radius

    Square:
      type: object
      properties:
        type:
          type: string
          enum: ["square"]
        size:
          type: number
          minimum: 0
        color:
          type: string
      required:
        - type
        - size

    Triangle:
      type: object
      properties:
        type:
          type: string
          enum: ["triangle"]
        base:
          type: number
          minimum: 0
        height:
          type: number
          minimum: 0
        color:
          type: string
      required:
        - type
        - base
        - height

    # Test another discriminated union with anyOf
    User:
      discriminator:
        propertyName: role
      anyOf:
        - $ref: "#/components/schemas/AdminUser"
        - $ref: "#/components/schemas/RegularUser"

    AdminUser:
      type: object
      properties:
        role:
          type: string
          enum: ["admin"]
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
      required:
        - role
        - name
        - permissions

    RegularUser:
      type: object
      properties:
        role:
          type: string
          enum: ["user"]
        name:
          type: string
        department:
          type: string
      required:
        - role
        - name
